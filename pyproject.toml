[build-system]
requires = [
    "setuptools>=74",
    "wheel",
    "packaging>=24.1",
    "tomli",
    "cmake>=3.29,<3.30",
]
build-backend = "setuptools.build_meta"

[project]
name = "pyvision"
dynamic = ["version"]
readme = "dynamic"
description = "Pyvision: a framework to detect objects"
dependencies = [
    "debugpy==1.8.11",
    "looseversion==1.3.0",
    "numpy>=1.23.0,<2.0.0", # Needed to pin a specific version for ultralytics
    "opencv-python==4.10.0.84",
    "pre-commit==4.0.1",
    "pylint==3.3.2",
    "pygame==2.6.1",
    "rethinkdb==2.4.10.post1",
    "ruff==0.9.10",
    "six==1.17.0",
    "thinker==1.1.1",
    "torch>=1.8.0,<2.4.0; sys_platform == 'win32'",  # Windows CPU errors https://github.com/ultralytics/ultralytics/issues/15049
    "torch>=1.8.0",
    "typing_extensions==4.12.2",
    "ultralytics>=8.2"
]
requires-python = ">=3.12"

[project.optional-dependencies]
dev = [
    "hatch"
]

[project.scripts]
#pyvision = "pyvision.entrypoint:main"

[tool.hatch.envs.default.scripts]
pyvision-dev = "hatch run python -m pyvision.main"
pyvision = "hatch run python -O -OO -m pyvision.main" # run with optimizations
debug = "python -m debugpy --listen 5678 ./src/pyvision/main.py"

[tool.hatch.version]
path = "src/pyvision/__init__.py"

[tool.hatch.build.targets.sdist]
include = [
    "src/pyvision",
    "EnumerateDevice/EnumerateDevice/device.cpp",
]

[tool.hatch.build.targets.wheel]
include = [
    "src/pyvision",
    "EnumerateDevice/EnumerateDevice/device.cpp",
]

[tool.hatch.metadata]
allow-dynamic-versioning = true

[tool.ruff]
line-length = 88

[tool.ruff.lint]
select = ["C901", "D", "E4", "E7", "E9", "I", "F"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.format]
docstring-code-format = true
docstring-code-line-length = 72
